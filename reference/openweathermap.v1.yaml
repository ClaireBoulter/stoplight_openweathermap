openapi: 3.0.0
info:
  title: Open Weather Map API
  version: '1.0'
  contact:
    name: Support
  termsOfService: 'https://openweathermap.org/terms'
  license:
    name: CC Attribution-ShareAlike 4.0 (CC BY-SA 4.0)
    url: 'https://openweathermap.org/price'
  description: 'Get the current weather, daily forecast for 16 days, and a three-hour-interval forecast for 5 days for your city. Helpful stats, graphics, and this day in history charts are available for your reference. Interactive maps show precipitation, clouds, pressure, wind around your location stations. Data is available in JSON, XML, or HTML format. **Note**: This sample Swagger file covers the `current` endpoint only from the OpenWeatherMap API. <br/><br/> **Note**: All parameters are optional, but you must select at least one parameter. Calling the API by city ID (using the `id` parameter) will provide the most precise location results.'
servers:
  - url: 'https://api.openweathermap.org/data/2.5'
    description: prod
paths:
  /weather:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: coord
                type: object
                properties:
                  Coord:
                    type: object
                  lon:
                    type: string
                    description: |-
                      ity geo location, longitude
                      example: 145.77000000000001
                  lat:
                    type: string
                    description: |-
                      City geo location, latitude
                                example: -16.920000000000002
                  Weather:
                    type: object
                  id:
                    type: string
                    description: Internal parameter
                  main:
                    type: integer
                    description: 'roup of weather parameters (Rain, Snow, Extreme etc.)'
                  description:
                    type: string
                    description: Weather condition within the group
                  icon:
                    type: string
                    description: Weather icon id
                  Main:
                    type: object
                  temp:
                    type: number
                    description: 'Temperature. Unit Default: Kelvin, Metric: Celsius, Imperial: Fahrenheit.'
                  ' pressure':
                    description: 'Atmospheric pressure (on the sea level, if there is no sea_level or grnd_level data), hPa'
                    type: integer
                  ' humidity':
                    type: integer
                    description: 'Humidity, %'
                  temp_min:
                    type: number
                    description: 'Minimum temperature at the moment. This is deviation from current temp that is possible for large cities and megalopolises geographically expanded (use these parameter optionally). Unit Default: Kelvin, Metric: Celsius, Imperial: Fahrenheit.'
                  temp_max:
                    type: number
                    description: 'Maximum temperature at the moment. This is deviation from current temp that is possible for large cities and megalopolises geographically expanded (use these parameter optionally). Unit Default: Kelvin, Metric: Celsius, Imperial: Fahrenheit.'
                  sea_level:
                    type: string
                    description: 'Atmospheric pressure on the sea level, hPa'
                  grnd_level:
                    type: number
                    description: 'Atmospheric pressure on the ground level, hPa'
                  Wind:
                    type: object
                  speed:
                    type: number
                    description: 'Wind speed. Unit Default: meter/sec, Metric: meter/sec, Imperial: miles/hour.'
                  deg:
                    type: integer
                    description: 'Wind direction, degrees (meteorological)'
                  Clouds:
                    type: object
                  all:
                    type: integer
                    description: 'Cloudiness, %'
                  Rain:
                    type: integer
                    description: 'Rain volume for the last 3 hours  '
                  Snow:
                    type: object
                    description: Snow volume for the last 3 hours
                  Sys:
                    type: object
                    description: Internal parameter
                  message:
                    type: string
                    description: Internal parameter
                  country:
                    type: string
                    description: 'Country code (GB, JP etc.)'
                  ' sunrise':
                    type: integer
                    description: 'Sunrise time, unix, UTC'
                  sunset:
                    type: integer
                    description: 'Sunset time, unix, UTC'
                  securitySchemes:
                    type: object
                  app_id:
                    type: string
                    description: API key to authorize requests.
                  '':
                    type: string
              examples: {}
            application/xml:
              schema:
                type: object
                properties: {}
            multipart/form-data:
              schema:
                type: object
                properties:
                  '':
                    type: string
            text/html:
              schema:
                type: object
                properties:
                  '':
                    type: string
        '201':
          description: Created
      operationId: get-weather
      security:
        - app_id: []
      parameters:
        - schema:
            type: string
          in: query
          name: zip
          description: '**Zip code*. Search by zip code. Example 950950.'
        - schema:
            type: string
          in: query
          name: units
          description: 'Units of measurement. Possible values: standard, metric and imperial.'
        - schema:
            type: string
          in: query
          name: q
          description: 'City name, state code and country code divided by comma, use ISO 3166 country codes.'
        - schema:
            type: string
          in: query
          name: id
          description: Your unique API key
        - schema:
            type: string
          in: query
          name: lat
          description: Latitude. Example 35.
        - schema:
            type: string
          in: query
          name: lon
          description: Longitude. Example 139.
        - schema:
            type: string
          in: query
          name: lang
          description: Language. Example **en""
        - schema:
            type: string
          in: query
          name: mode
          description: Response format. Possible values are xml and html.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
            examples:
              example-1:
                value: {}
          application/xml:
            schema:
              type: object
              properties: {}
        description: 'Access current weather data for any location on Earth including over 200,000 cities! Current weather is frequently updated based on global models and data from more than 40,000 weather stations.'
      description: 'Get the current weather, daily forecast for 16 days, and a three-hour-interval forecast for 5 days for your city. Helpful stats, graphics, and this day in history charts are available for your reference. Interactive maps show precipitation, clouds, pressure, wind around your location stations. Data is available in JSON, XML, or HTML format. **Note**: This sample Swagger file covers the `current` endpoint only from the OpenWeatherMap API. <br/><br/> **Note**: All parameters are optional, but you must select at least one parameter. Calling the API by city ID (using the `id` parameter) will provide the most precise location results.'
    parameters: []
components:
  schemas: {}
  securitySchemes:
    app_id:
      name: API Key
      type: apiKey
      in: query
