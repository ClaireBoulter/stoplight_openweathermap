openapi: 3.0.0
info:
  title: Open Weather Map API
  version: '1.0'
  contact:
    name: Support
  termsOfService: 'https://openweathermap.org/terms'
  license:
    name: CC Attribution-ShareAlike 4.0 (CC BY-SA 4.0)
    url: 'https://openweathermap.org/price'
  description: 'Get the current weather, daily forecast for 16 days, and a three-hour-interval forecast for 5 days for your city. Helpful stats, graphics, and this day in history charts are available for your reference. Interactive maps show precipitation, clouds, pressure, wind around your location stations. Data is available in JSON, XML, or HTML format. **Note**: This sample Swagger file covers the `current` endpoint only from the OpenWeatherMap API. <br/><br/> **Note**: All parameters are optional, but you must select at least one parameter. Calling the API by city ID (using the `id` parameter) will provide the most precise location results.'
servers:
  - url: 'https://api.openweathermap.org/data/2.5'
    description: prod
paths:
  /weather:
    get:
      summary: Your GET endpoint
      tags:
        - Weather endpoints
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: coord
                type: object
                properties:
                  Coord:
                    type: object
                    description: ''
                    properties:
                      lon:
                        type: number
                        description: |-
                          City geo location, longitude
                          example: 145.77000000000001
                      lat:
                        type: number
                        description: |-
                          City geo location, latitude
                          example: -16.920000000000002
                  Weather:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: ' Weather condition id'
                      main:
                        type: string
                        description: 'Group of weather parameters (Rain, Snow, Extreme etc.)'
                      description:
                        type: string
                        description: Weather condition within the group
                      icon:
                        type: string
                        description: Weather icon id
                  base:
                    type: object
                    properties:
                      main:
                        type: array
                        description: ''
                        items: {}
                      temp:
                        type: integer
                        description: 'Temperature. Unit Default: Kelvin, Metric: Celsius, Imperial: Fahrenheit.'
                      feels_like:
                        type: number
                        description: 'Temperature. This temperature parameter accounts for the human perception of weather. Unit Default: Kelvin, Metric: Celsius, Imperial: Fahrenheit.'
                      temp_min:
                        type: number
                        description: 'Maximum temperature at the moment. This is deviation from current temp that is possible for large cities and megalopolises geographically expanded (use these parameter optionally). Unit Default: Kelvin, Metric: Celsius, Imperial: Fahrenheit.'
                      temp_max:
                        type: number
                        description: 'Maximum temperature at the moment. This is deviation from current temp that is possible for large cities and megalopolises geographically expanded (use these parameter optionally). Unit Default: Kelvin, Metric: Celsius, Imperial: Fahrenheit.'
                      pressure:
                        type: integer
                        description: 'Humidity, %'
                      humidity:
                        type: string
                        description: 'Humidity, %'
                  visibiility:
                    type: object
                    properties:
                      wind:
                        type: array
                        description: 'Cloudiness, %'
                        items: {}
                      speed:
                        type: number
                        description: 'Wind speed. Unit Default: meter/sec, Metric: meter/sec, Imperial: miles/hour.'
                      deg:
                        type: string
                        description: 'Wind direction, degrees (meteorological)'
                  Clouds:
                    type: object
                    description: ''
                    properties:
                      all:
                        type: integer
                        description: ain volume for the last 3 hours
                  dt:
                    type: object
                    description: '1560350645'
                    properties:
                      sys:
                        type: array
                        items: {}
                      type:
                        type: integer
                        description: 'Time of data calculation, unix, UTC'
                      id:
                        type: integer
                        description: City ID
                      message:
                        type: string
                        description: Internal parameter
                      country:
                        type: string
                        description: 'Country code (GB, JP etc.)'
                      sunrise:
                        type: integer
                        description: |
                          Sunrise time, unix, UTC
                      sunset:
                        type: integer
                        description: ' Sunset time, unix, UTC'
                  timezone:
                    type: number
                    description: timezone
                  id:
                    type: integer
                    description: City ID
                  name:
                    type: string
                    description: City name
                  cod:
                    type: string
                    description: ' Internal parameter'
              examples:
                example-1:
                  value:
                    Coord:
                      lon: 0
                      lat: 0
                    Weather:
                      id: 0
                      main: string
                      description: string
                      icon: string
                    base:
                      main:
                        - null
                      temp: 0
                      feels_like: 0
                      temp_min: 0
                      temp_max: 0
                      pressure: 0
                      humidity: string
                    visibiility:
                      wind:
                        - null
                      speed: 0
                      deg: string
                    Clouds:
                      all: 0
                    dt:
                      sys:
                        - null
                      type: 0
                      id: 0
                      message: string
                      country: string
                      sunrise: 0
                      sunset: 0
            application/xml:
              schema:
                type: object
                properties: {}
            multipart/form-data:
              schema:
                type: object
                properties:
                  '':
                    type: string
            text/html:
              schema:
                type: object
                properties:
                  '':
                    type: string
      operationId: get-weather
      security:
        - app_id: []
      parameters:
        - schema:
            type: string
          in: query
          name: q
          description: '*City name**. *Example: London*. You can call by city name, or by city name and country code. The API responds with a list of results that match a searching word. For the query value, type the city name and optionally the country code divided by a comma; use ISO 3166 country codes.'
          required: true
        - schema:
            type: string
          in: query
          name: mode
          description: '**Mode**. *Example: html*. Determines the format of the response. Possible values are `json`, `xml`, and `html`. If the mode parameter is empty, the format is `json` by default.'
        - schema:
            type: string
          in: query
          name: units
          description: '*Units**. *Example: imperial*. Possible values: `standard`, `metric`, and `imperial`. When you do not use the `units` parameter, the format is `standard` by default.'
        - schema:
            type: string
          in: query
          name: lang
          description: '**Language**. *Example: en*. You can use lang parameter to get the output in your language. We support the following languages that you can use with the corresponded lang values: Arabic - `ar`, Bulgarian - `bg`, Catalan - `ca`, Czech - `cz`, German - `de`, Greek - `el`, English - `en`, Persian (Farsi) - `fa`, Finnish - `fi`, French - `fr`, Galician - `gl`, Croatian - `hr`, Hungarian - `hu`, Italian - `it`, Japanese - `ja`, Korean - `kr`, Latvian - `la`, Lithuanian - `lt`, Macedonian - `mk`, Dutch - `nl`, Polish - `pl`, Portuguese - `pt`, Romanian - `ro`, Russian - `ru`, Swedish - `se`, Slovak - `sk`, Slovenian - `sl`, Spanish - `es`, Turkish - `tr`, Ukrainian - `ua`, Vietnamese - `vi`, Chinese Simplified - `zh_cn`, Chinese Traditional - `zh_tw`.'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
            examples:
              example-1:
                value: {}
          application/xml:
            schema:
              type: object
              properties: {}
          multipart/form-data:
            schema:
              type: object
              properties: {}
          text/html:
            schema:
              type: object
              properties: {}
          text/plain:
            schema:
              type: object
              properties: {}
        description: 'Access current weather data for any location on Earth including over 200,000 cities! Current weather is frequently updated based on global models and data from more than 40,000 weather stations.'
      description: 'Access current weather data for any location on Earth including over 200,000 cities! We collect and process weather data from different sources such as global and local weather models, satellites, radars and vast network of weather stations. Data is available in JSON, XML, or HTML format.'
    parameters: []
components:
  schemas: {}
  securitySchemes:
    app_id:
      name: API Key
      type: apiKey
      in: query
tags:
  - name: Weather endpoints
