openapi: 3.0.0
info:
  title: Open Weather Map API
  version: '1.0'
  contact:
    name: Support
  termsOfService: 'https://openweathermap.org/terms'
  license:
    name: CC Attribution-ShareAlike 4.0 (CC BY-SA 4.0)
    url: 'https://openweathermap.org/price'
  description: 'Get the current weather, daily forecast for 16 days, and a three-hour-interval forecast for 5 days for your city. Helpful stats, graphics, and this day in history charts are available for your reference. Interactive maps show precipitation, clouds, pressure, wind around your location stations. Data is available in JSON, XML, or HTML format. **Note**: This sample Swagger file covers the `current` endpoint only from the OpenWeatherMap API. <br/><br/> **Note**: All parameters are optional, but you must select at least one parameter. Calling the API by city ID (using the `id` parameter) will provide the most precise location results.'
servers:
  - url: 'https://api.openweathermap.org/data/2.5'
    description: prod
paths:
  /weather:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: coord
                type: object
                properties:
                  Coord:
                    type: object
                  lon:
                    type: number
                    description: |-
                      ity geo location, longitude
                      example: 145.77000000000001
                  lat:
                    type: number
                    description: |-
                      City geo location, latitude
                                example: -16.920000000000002
                  Weather:
                    type: object
                  id:
                    type: integer
                    description: ' Weather condition id'
                  main:
                    type: string
                    description: 'roup of weather parameters (Rain, Snow, Extreme etc.)'
                  description:
                    type: string
                    description: Weather condition within the group
                  icon:
                    type: string
                    description: Weather icon id
                  Main:
                    type: object
                  temp:
                    type: number
                    description: 'Temperature. Unit Default: Kelvin, Metric: Celsius, Imperial: Fahrenheit.'
                  ' pressure':
                    description: 'Atmospheric pressure (on the sea level, if there is no sea_level or grnd_level data), hPa'
                    type: integer
                  ' humidity':
                    type: integer
                    description: 'Humidity, %'
                  temp_min:
                    type: number
                    description: 'Minimum temperature at the moment. This is deviation from current temp that is possible for large cities and megalopolises geographically expanded (use these parameter optionally). Unit Default: Kelvin, Metric: Celsius, Imperial: Fahrenheit.'
                  temp_max:
                    type: number
                    description: 'Maximum temperature at the moment. This is deviation from current temp that is possible for large cities and megalopolises geographically expanded (use these parameter optionally). Unit Default: Kelvin, Metric: Celsius, Imperial: Fahrenheit.'
                  sea_level:
                    type: number
                    description: 'Atmospheric pressure on the sea level, hPa'
                  grnd_level:
                    type: number
                    description: 'Atmospheric pressure on the ground level, hPa'
                  Wind:
                    type: object
                  speed:
                    type: number
                    description: 'Wind speed. Unit Default: meter/sec, Metric: meter/sec, Imperial: miles/hour.'
                  deg:
                    type: integer
                    description: 'Wind direction, degrees (meteorological)'
                  Clouds:
                    type: object
                  all:
                    type: integer
                    description: 'Cloudiness, %'
                  Rain:
                    type: object
                    description: 'Rain volume for the last 3 hours  '
                    properties:
                      3h:
                        type: string
                        description: ain volume for the last 3 hours
                  Snow:
                    type: object
                    description: Snow volume for the last 3 hours
                    properties:
                      3h:
                        type: string
                        description: Snow volume for the last 3 hours
                  Sys:
                    type: object
                    description: Internal parameter
                    properties:
                      type:
                        type: string
                        description: Internal parameter
                      id:
                        type: integer
                        description: Internal parameter
                  message:
                    type: number
                    description: Internal parameter
                  country:
                    type: string
                    description: 'Country code (GB, JP etc.)'
                  ' sunrise':
                    type: integer
                    description: 'Sunrise time, unix, UTC'
                  sunset:
                    type: integer
                    description: 'Sunset time, unix, UTC'
                  securitySchemes:
                    type: object
                  app_id:
                    type: string
                    description: API key to authorize requests.
              examples: {}
            application/xml:
              schema:
                type: object
                properties: {}
            multipart/form-data:
              schema:
                type: object
                properties:
                  '':
                    type: string
            text/html:
              schema:
                type: object
                properties:
                  '':
                    type: string
        '201':
          description: Created
      operationId: get-weather
      security:
        - app_id: []
      parameters:
        - schema:
            type: string
          in: query
          name: name
          description: '**City name**. *Example: London*. You can call by city name, or by city name and country code. The API responds with a list of results that match a searching word. For the query value, type the city name and optionally the country code divided by a comma; use ISO 3166 country codes.  '
        - schema:
            type: string
          in: query
          name: id
          description: '**City ID**. *Example: `2172797`*. You can call by city ID. The API responds with the exact result. The List of city IDs can be downloaded [here](http://bulk.openweathermap.org/sample/). You can include multiple cities in this parameter &mdash; just separate them by commas. The limit of locations is 20. *Note: A single ID counts as a one API call. So, if you have city IDs, it''s treated as 3 API calls.*'
        - schema:
            type: string
          in: query
          name: lat
          description: '**Latitude**. *Example: 35*. The latitude coordinate of the location of your interest. Must use with `lon`.  '
        - schema:
            type: string
          in: query
          name: lon
          description: '**Longitude**. *Example: 139*. Longitude coordinate of the location of your interest. Must use with `lat`.'
        - schema:
            type: string
          in: query
          name: zip
          description: '**Zip code**. Search by zip code. *Example: 95050,us*. Please note that if the country is not specified, the search uses USA as a default.'
        - schema:
            type: string
          in: query
          name: units
          description: '*Units**. *Example: imperial*. Possible values: `standard`, `metric`, and `imperial`. When you do not use the `units` parameter, the format is `standard` by default.'
        - schema:
            type: string
          in: query
          name: lang
          description: '**Language**. *Example: en*. You can use lang parameter to get the output in your language. We support the following languages that you can use with the corresponded lang values: Arabic - `ar`, Bulgarian - `bg`, Catalan - `ca`, Czech - `cz`, German - `de`, Greek - `el`, English - `en`, Persian (Farsi) - `fa`, Finnish - `fi`, French - `fr`, Galician - `gl`, Croatian - `hr`, Hungarian - `hu`, Italian - `it`, Japanese - `ja`, Korean - `kr`, Latvian - `la`, Lithuanian - `lt`, Macedonian - `mk`, Dutch - `nl`, Polish - `pl`, Portuguese - `pt`, Romanian - `ro`, Russian - `ru`, Swedish - `se`, Slovak - `sk`, Slovenian - `sl`, Spanish - `es`, Turkish - `tr`, Ukrainian - `ua`, Vietnamese - `vi`, Chinese Simplified - `zh_cn`, Chinese Traditional - `zh_tw`.'
        - schema:
            type: string
          in: query
          name: mode
          description: '**Mode**. *Example: html*. Determines the format of the response. Possible values are `json`, `xml`, and `html`. If the mode parameter is empty, the format is `json` by default.'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
            examples:
              example-1:
                value: {}
          application/xml:
            schema:
              type: object
              properties: {}
          multipart/form-data:
            schema:
              type: object
              properties: {}
          text/html:
            schema:
              type: object
              properties: {}
          text/plain:
            schema:
              type: object
              properties: {}
        description: 'Access current weather data for any location on Earth including over 200,000 cities! Current weather is frequently updated based on global models and data from more than 40,000 weather stations.'
      description: 'Get the current weather, daily forecast for 16 days, and a three-hour-interval forecast for 5 days for your city. Helpful stats, graphics, and this day in history charts are available for your reference. Interactive maps show precipitation, clouds, pressure, wind around your location stations. Data is available in JSON, XML, or HTML format. **Note**: This sample Swagger file covers the `current` endpoint only from the OpenWeatherMap API. <br/><br/> **Note**: All parameters are optional, but you must select at least one parameter. Calling the API by city ID (using the `id` parameter) will provide the most precise location results.'
    parameters: []
components:
  schemas: {}
  securitySchemes:
    app_id:
      name: API Key
      type: apiKey
      in: query
